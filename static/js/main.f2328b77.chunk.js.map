{"version":3,"sources":["request.js","App.js","index.js"],"names":["serverResponse","urlRequest","request","XMLHttpRequest","open","send","status","response","responseText","JSON","parse","console","log","statusText","am4core","am4themes_animated","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","arrayOrders","data","name","quantity","price","type","onSendOrder","bind","assertThisInitialized","setState","am4themes_material","chart1","am4charts","paddingRight","orders","visits","chartData","n","length","firstDate","Date","setMinutes","getDate","i","newDate","h","time","m","s","parseInt","setHours","setSeconds","push","date","generateChartData","dateAxis","xAxes","baseInterval","timeUnit","count","tooltipDateFormat","yAxes","tooltip","disabled","series1","series","dataFields","dateX","valueY","tooltipText","fillOpacity","cursor","lineY","opacity","scrollbarX","events","on","zoom","start","end","fill","lighten","value","qua","category","interfaceColors","chart2","bottomAxesContainer","layout","reverseOrder","categoryAxis","renderer","grid","template","stroke","getFor","strokeOpacity","location","minGridDistance","valueAxis2","baseGrid","marginRight","gridContainer","background","series2","categoryY","valueX","xAxis","bullet","bullets","_this2","react_default","a","createElement","Fragment","className","id","placeholder","onChange","e","target","onClick","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2328b77.chunk.js","sourcesContent":["export function serverResponse(urlRequest) {\n    let request = new XMLHttpRequest();\n    request.open('GET', urlRequest, false);\n    request.send();\n    if (request.status !== 200) {\n        console.log(request.status + ': ' + request.statusText);\n    } else {\n        let response = request.responseText;\n        response = JSON.parse(response);\n        return response;\n    }\n}\n\nexport function sendOrder(name, quantity, price, type) {\n    return \"https://playground24.ru/dsxt-api/send_order.php?name=\" + name + \"&quantity=\" + quantity + \"&price=\" + price + \"&type=\" + type;\n}\n\nexport function getOrders() {\n    return \"https://playground24.ru/dsxt-api/get_orders.php?request=true\";\n}\n","import React from 'react';\nimport { serverResponse, sendOrder, getOrders } from './request';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n\nam4core.useTheme(am4themes_animated);\n\nclass App extends React.Component {\n    constructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tarrayOrders: null,\n            data: null,\n            name: null,\n            quantity: null,\n            price: null,\n            type: null\n\t\t};\n\t\tthis.onSendOrder = this.onSendOrder.bind(this);\n\t}\n\n    onSendOrder() {\n\t\tthis.setState({ data: serverResponse(sendOrder(this.state.name, this.state.quantity, this.state.price, this.state.type)) });\n\t}\n\n    componentWillMount() {\n        this.setState({ arrayOrders: serverResponse(getOrders()) });\n    }\n\n    componentDidMount() {\n        //chart line\n        am4core.useTheme(am4themes_material);\n        am4core.useTheme(am4themes_animated);\n\n        let chart1 = am4core.create(\"chartdiv1\", am4charts.XYChart);\n        chart1.paddingRight = 20;\n\n        chart1.data = generateChartData(this.state.arrayOrders);\n\n        let dateAxis = chart1.xAxes.push(new am4charts.DateAxis());\n        dateAxis.baseInterval = {\n          \"timeUnit\": \"minute\",\n          \"count\": 1\n        };\n        dateAxis.tooltipDateFormat = \"HH:mm:ss, d MMMM\";\n\n        let valueAxis1 = chart1.yAxes.push(new am4charts.ValueAxis());\n        valueAxis1.tooltip.disabled = true;\n\n        let series1 = chart1.series.push(new am4charts.LineSeries());\n        series1.dataFields.dateX = \"date\";\n        series1.dataFields.valueY = \"visits\";\n        series1.tooltipText = \"Price: [bold]{valueY}[/]\";\n        series1.fillOpacity = 0.3;\n\n        chart1.cursor = new am4charts.XYCursor();\n        chart1.cursor.lineY.opacity = 0;\n        chart1.scrollbarX = new am4charts.XYChartScrollbar();\n        chart1.scrollbarX.series.push(series1);\n\n        chart1.events.on(\"datavalidated\", function () {\n            dateAxis.zoom({start:0.8, end:1});\n        });\n\n        chart1.fill = am4core.color(\"blue\").lighten(0.5);\n\n\n        function generateChartData(orders) {\n            let chartData = [];\n            let n = orders.length;\n            let firstDate = new Date();\n            firstDate.setMinutes(firstDate.getDate() - n);\n            let visits;\n            for (let i = 0; i < n; i++) {\n                let newDate = new Date(firstDate);\n\n                let h = orders[i].time[0] + orders[i].time[1];\n                let m = orders[i].time[3] + orders[i].time[4];\n                let s = orders[i].time[6] + orders[i].time[7];\n                newDate.setMinutes(parseInt(m, 10));\n                newDate.setHours(parseInt(h, 10));\n                newDate.setSeconds(parseInt(s, 10));\n\n                visits = orders[i].price;\n                chartData.push({\n                    date: newDate,\n                    visits: visits\n                });\n            }\n            return chartData;\n        }\n        var data = [];\n\n        for (let i = 0; i < this.state.arrayOrders.length; i++) {\n          let value = this.state.arrayOrders[i].price;\n          let qua = this.state.arrayOrders[i].quantity;\n          data.push({ value: qua, category: value });\n        }\n\n        let interfaceColors = new am4core.InterfaceColorSet();\n\n        let chart2 = am4core.create(\"chartdiv2\", am4charts.XYChart);\n\n        chart2.data = data;\n        chart2.bottomAxesContainer.layout = \"horizontal\";\n        chart2.bottomAxesContainer.reverseOrder = true;\n\n        let categoryAxis = chart2.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"category\";\n        categoryAxis.renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\n        categoryAxis.renderer.grid.template.strokeOpacity = 1;\n        categoryAxis.renderer.grid.template.location = 1;\n        categoryAxis.renderer.minGridDistance = 20;\n\n        let valueAxis2 = chart2.xAxes.push(new am4charts.ValueAxis());\n        valueAxis2.tooltip.disabled = true;\n        valueAxis2.renderer.baseGrid.disabled = true;\n        valueAxis2.marginRight = 3;\n        valueAxis2.renderer.gridContainer.background.fill = interfaceColors.getFor(\"alternativeBackground\");\n        valueAxis2.renderer.gridContainer.background.fillOpacity = 0.05;\n        valueAxis2.renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\n        valueAxis2.renderer.grid.template.strokeOpacity = 1;\n\n        let series2 = chart2.series.push(new am4charts.ColumnSeries());\n        series2.dataFields.categoryY = \"category\";\n        series2.dataFields.valueX = \"value\";\n        series2.xAxis = valueAxis2;\n        series2.name = \"Series\";\n        let bullet = series2.bullets.push(new am4charts.CircleBullet());\n        bullet.fillOpacity = 0;\n        bullet.strokeOpacity = 0;\n        bullet.tooltipText = \"{valueX.value}\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"general\">\n                    <div className=\"top\">\n                        <div className=\"chart\">\n                            <div id=\"chartdiv1\"></div>\n                        </div>\n                        <div className=\"order\">\n                            <div id=\"chartdiv2\"></div>\n                        </div>\n                    </div>\n                    <div className=\"title gradient gradient_cold\">{this.state.data !== null ? 'Оффер номер: ' + this.state.data : 'Buy / sell'}</div>\n                    <div className=\"bottom\">\n                        <div className=\"form\">\n                            <input className=\"input\" type=\"text\" name=\"name\" placeholder=\"Наименование\" onChange={(e)=>{this.setState({ name: e.target.value })}}/>\n                            <input className=\"input\" type=\"number\" name=\"quantity\" placeholder=\"Количество\" onChange={(e)=>{this.setState({ quantity: e.target.value })}}/>\n                            <input className=\"input\" type=\"number\" name=\"price\" placeholder=\"Цена\" onChange={(e)=>{this.setState({ price: e.target.value })}}/>\n                            <input className=\"input\" type=\"text\" name=\"type\" placeholder=\"Тип\" onChange={(e)=>{this.setState({ type: e.target.value })}}/>\n                            <button className=\"btn\" onClick={()=>{this.onSendOrder()}}>Отправить</button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}