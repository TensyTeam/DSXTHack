{"version":3,"sources":["request.js","App.js","index.js"],"names":["serverResponse","urlRequest","request","XMLHttpRequest","open","send","status","response","responseText","JSON","parse","console","log","statusText","sendOrder","name","quantity","price","type","am4core","am4themes_animated","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","arrayOrders","onSendData","bind","assertThisInitialized","time","date","value","setState","data","am4themes_material","chart","am4charts","paddingRight","visits","chartData","n","length","firstDate","Date","setMinutes","getDate","i","newDate","h","m","parseInt","setHours","push","generateChartData","dateAxis","xAxes","baseInterval","timeUnit","count","tooltipDateFormat","valueAxis","yAxes","tooltip","disabled","title","text","series","dataFields","dateX","valueY","tooltipText","fillOpacity","cursor","lineY","opacity","scrollbarX","events","on","zoom","start","end","_this2","react_default","a","createElement","Fragment","className","id","onClick","e","action","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7574cf8b.chunk.js","sourcesContent":["export function serverResponse(urlRequest) {\n    let request = new XMLHttpRequest();\n    request.open('GET', urlRequest, false);\n    request.send();\n    if (request.status !== 200) {\n        console.log(request.status + ': ' + request.statusText);\n    } else {\n        let response = request.responseText;\n        response = JSON.parse(response);\n        return response;\n    }\n}\n\nexport function sendOrder(name, quantity, price, type) {\n    return \"https://playground24.ru/dsxt-api/send_order.php?name=\" + name + \"&quantity=\" + quantity + \"&price=\" + price + \"&type=\" + type;\n}\n\nexport function getOrders(request) {\n    return \"https://playground24.ru/dsxt-api/get_orders.php?request=true\";\n}\n","import React from 'react';\nimport { serverResponse, sendOrder, getOrders } from './request';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_material from \"@amcharts/amcharts4/themes/material\";\n\nam4core.useTheme(am4themes_animated);\n\nclass App extends React.Component {\n    constructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tarrayOrders: null\n\t\t};\n\t\tthis.onSendData = this.onSendData.bind(this);\n\t}\n\n    onSendData(time,date,type,value,name) {\n\t\tthis.setState({ data: serverResponse(sendOrder(value,name)) });\n\t}\n\n    componentDidMount() {\n        this.state.arrayOrders = serverResponse(getOrders());\n        console.log(this.state.arrayOrders);\n\n        am4core.useTheme(am4themes_material);\n        am4core.useTheme(am4themes_animated);\n\n        var chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n        chart.paddingRight = 20;\n\n        chart.data = generateChartData(this.state.arrayOrders);\n\n        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n        dateAxis.baseInterval = {\n          \"timeUnit\": \"minute\",\n          \"count\": 1\n        };\n        dateAxis.tooltipDateFormat = \"HH:mm, d MMMM\";\n\n        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n        valueAxis.tooltip.disabled = true;\n        valueAxis.title.text = \"Unique visitors\";\n\n        var series = chart.series.push(new am4charts.LineSeries());\n        series.dataFields.dateX = \"date\";\n        series.dataFields.valueY = \"visits\";\n        series.tooltipText = \"Visits: [bold]{valueY}[/]\";\n        series.fillOpacity = 0.3;\n\n        chart.cursor = new am4charts.XYCursor();\n        chart.cursor.lineY.opacity = 0;\n        chart.scrollbarX = new am4charts.XYChartScrollbar();\n        chart.scrollbarX.series.push(series);\n\n        chart.events.on(\"datavalidated\", function () {\n            dateAxis.zoom({start:0.8, end:1});\n        });\n\n        function generateChartData() {\n            var chartData = [];\n            var n = this.state.arrayOrders.length;\n            var firstDate = new Date();\n            firstDate.setMinutes(firstDate.getDate() - n);\n            var visits;\n            for (var i = 0; i < n; i++) {\n                var newDate = new Date(firstDate);\n\n                var h = this.state.arrayOrders[i].time[0] + this.state.arrayOrders[i].time[1];\n                var m = this.state.arrayOrders[i].time[3] + this.state.arrayOrders[i].time[4];\n                newDate.setMinutes(parseInt(m, 10));\n                newDate.setHours(parseInt(h, 10));\n\n                visits = this.state.arrayOrders[i].value;\n                chartData.push({\n                    date: newDate,\n                    visits: visits\n                });\n            }\n            return chartData;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"general\">\n                    <div className=\"top\">\n                        <div className=\"chart\">\n                            <div id=\"chartdiv\"></div>\n                        </div>\n                        <div className=\"order\">\n                            2\n                        </div>\n                    </div>\n                    <div className=\"bottom\">\n                        <div className=\"content\">\n                            {this.state.data !== null && this.state.data}\n                            <input type=\"text\" name=\"value\" />\n                            <input type=\"text\" name=\"name\" />\n                            <button onClick={(e)=>{this.onSendData('11','token1')}}>Отправить</button>\n                        </div>\n                        <form action=\"handler.php\">\n                            <input type=\"text\" name=\"value\" />\n                            <input type=\"text\" name=\"name\" />\n                            <button>Отправить</button>\n                        </form>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}